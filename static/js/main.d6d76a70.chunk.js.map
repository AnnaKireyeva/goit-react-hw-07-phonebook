{"version":3,"sources":["Components/ContactsItem/ContactsItem.module.css","Components/Filter/Filter.module.css","Components/Loader/Loader.module.css","Components/ContactsList/ContactList.module.css","Components/AddContactForm/AddContactForm.module.css","Components/Loader/Loader.js","redux/phonebook-operations.js","redux/phonebook-selectors.js","Components/AddContactForm/AddContactForm.js","redux/phonebook-actions.js","Components/Filter/Filter.js","Components/ContactsItem/ContactsItem.js","Components/ContactsList/ContactList.js","App.js","redux/phonebook-reducer.js","redux/store.js","index.js"],"names":["module","exports","Loader","className","styles","spinner","type","color","height","width","timeout","axios","defaults","baseURL","fetchContacts","createAsyncThunk","_","a","rejectWithValue","get","response","data","message","addContact","name","number","contact","post","deleteContact","id","delete","phonebookOperations","getContacts","state","contacts","items","getFilter","filter","getLoading","loading","filterContacts","normalizedFilter","toLowerCase","includes","AddContactForm","useSelector","dispatch","useDispatch","useState","setName","setNumber","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","find","toast","warning","form","autoComplete","label","input","pattern","title","required","onChange","button","changeFilter","createAction","Filter","filterWrapper","filterLabel","filterInput","ContactsItem","onDeleteContact","contactsItem","contactWrapper","contactName","contactNumber","onClick","deleteBtn","size","ContactList","useEffect","contactList","map","App","length","autoClose","position","theme","createReducer","fulfilled","payload","pending","rejected","error","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","store","configureStore","reducer","phonebookReducer","devTools","process","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kIACAA,EAAOC,QAAU,CAAC,aAAe,mCAAmC,eAAiB,qCAAqC,YAAc,kCAAkC,cAAgB,oCAAoC,UAAY,kC,mBCA1OD,EAAOC,QAAU,CAAC,cAAgB,8BAA8B,YAAc,4BAA4B,YAAc,8B,mBCAxHD,EAAOC,QAAU,CAAC,QAAU,0B,mBCA5BD,EAAOC,QAAU,CAAC,YAAc,mC,4DCAhCD,EAAOC,QAAU,CAAC,KAAO,6BAA6B,MAAQ,8BAA8B,MAAQ,8BAA8B,OAAS,iC,mICE9HC,EAAS,WACpB,OACE,qBAAKC,UAAWC,IAAOC,QAAvB,SACE,cAAC,IAAD,CACEC,KAAK,QAELC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,QAAS,S,uFCRjBC,IAAMC,SAASC,QAAU,+CAUzB,IAAMC,EAAgBC,YACpB,yBADoC,uCAEpC,WAAOC,EAAP,oBAAAC,EAAA,6DAAYC,EAAZ,EAAYA,gBAAZ,kBAE2BP,IAAMQ,IAAI,cAFrC,cAEUC,EAFV,yBAGWA,EAASC,MAHpB,yDAKWH,EAAgB,KAAMI,UALjC,yDAFoC,yDAuBhCC,EAAaR,YACjB,sBADiC,uCAEjC,uCAAAE,EAAA,6DAASO,EAAT,EAASA,KAAMC,EAAf,EAAeA,OAAYP,EAA3B,EAA2BA,gBAA3B,SAEUQ,EAAU,CAAEF,OAAMC,UAF5B,SAG2Bd,IAAMgB,KAAK,YAAaD,GAHnD,cAGUN,EAHV,yBAIWA,EAASC,MAJpB,2DAMWH,EAAgB,KAAMI,UANjC,0DAFiC,yDAsB7BM,EAAgBb,YACpB,yBADoC,uCAEpC,WAAOc,EAAP,oBAAAZ,EAAA,6DAAaC,EAAb,EAAaA,gBAAb,kBAE2BP,IAAMmB,OAAN,oBAA0BD,IAFrD,cAEUT,EAFV,yBAGWA,EAASC,KAAKQ,IAHzB,yDAKWX,EAAgB,KAAMI,UALjC,yDAFoC,yDAkBvBS,EANa,CAC1BjB,gBACAS,aACAK,iBC1EWI,EAAc,SAAAC,GAAK,OAAIA,EAAMC,SAASC,OACtCC,EAAY,SAAAH,GAAK,OAAIA,EAAMC,SAASG,QACpCC,EAAa,SAAAL,GAAK,OAAIA,EAAMC,SAASK,SAErCC,EAAiB,SAAAP,GAC5B,IAAMC,EAAWF,EAAYC,GAEvBQ,EADSL,EAAUH,GACOS,cAChC,OAAOR,EAASG,QAAO,SAAAX,GAAO,OAC5BA,EAAQF,KAAKkB,cAAcC,SAASF,O,MCiFzBG,MAlFf,WACE,IAAMV,EAAWW,YAAYb,GACvBc,EAAWC,cAEjB,EAAwBC,mBAAS,IAAjC,mBAAOxB,EAAP,KAAayB,EAAb,KACA,EAA4BD,mBAAS,IAArC,mBAAOvB,EAAP,KAAeyB,EAAf,KAEMC,EAAe,SAAAC,GACnB,OAAQA,EAAEC,cAAc7B,MACtB,IAAK,OACHyB,EAAQG,EAAEC,cAAcC,OACxB,MACF,IAAK,SACHJ,EAAUE,EAAEC,cAAcC,OAC1B,MACF,QACE,SA0BAC,EAAQ,WACZN,EAAQ,IACRC,EAAU,KAGZ,OACE,uBAAMM,SA5Ba,SAAAJ,GAEnB,OADAA,EAAEK,iBAEAvB,EAASwB,MACP,SAAAhC,GAAO,OAAIA,EAAQF,KAAKkB,gBAAkBlB,EAAKkB,kBAGjDiB,IAAMC,QAAN,gBAAuBpC,EAAvB,kCACA+B,KAIErB,EAASwB,MAAK,SAAAhC,GAAO,OAAIA,EAAQD,OAAOiB,gBAAkBjB,MAC5DkC,IAAMC,QAAN,kBAAyBnC,EAAzB,kCACA8B,MAIFT,EAASf,EAAoBR,WAAW,CAAEC,OAAMC,iBAChD8B,MAS8BpD,UAAWC,IAAOyD,KAAMC,aAAa,MAAnE,UACE,wBAAO3D,UAAWC,IAAO2D,MAAzB,iBAEE,uBACE5D,UAAWC,IAAO4D,MAClB1D,KAAK,OACLkB,KAAK,OACL8B,MAAO9B,EACPyC,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAUjB,OAGd,wBAAOhD,UAAWC,IAAO2D,MAAzB,mBAEE,uBACE5D,UAAWC,IAAO4D,MAClB1D,KAAK,MACLkB,KAAK,SACL8B,MAAO7B,EACPwC,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,SAAUjB,OAGd,wBAAQ7C,KAAK,SAASH,UAAWC,IAAOiE,OAAxC,6B,iBCrEOC,EAAeC,YAAa,yBCW1BC,EAnBA,WACb,IAAMlB,EAAQT,YAAYT,GACpBU,EAAWC,cAEjB,OACE,qBAAK5C,UAAWC,IAAOqE,cAAvB,SACE,wBAAOtE,UAAWC,IAAOsE,YAAzB,kCAEE,uBACEpE,KAAK,OACLgD,MAAOA,EACPc,SAAU,SAAAhB,GAAC,OAAIN,EAASwB,EAAalB,EAAEC,cAAcC,SACrDnD,UAAWC,IAAOuE,oB,0CCYbC,EAzBM,SAAC,GAA2C,IAAzC/C,EAAwC,EAAxCA,GAAIL,EAAoC,EAApCA,KAAMC,EAA8B,EAA9BA,OAAQoD,EAAsB,EAAtBA,gBACxC,OACE,qBAAI1E,UAAWC,IAAO0E,aAAtB,UACE,sBAAK3E,UAAWC,IAAO2E,eAAvB,UACE,oBAAG5E,UAAWC,IAAO4E,YAArB,UAAmCxD,EAAnC,OACA,mBAAGrB,UAAWC,IAAO6E,cAArB,SAAqCxD,OAGvC,wBACEnB,KAAK,SACL4E,QAAS,kBAAML,EAAgBhD,IAC/B1B,UAAWC,IAAO+E,UAHpB,SAKE,cAAC,IAAD,CAAgBC,KAAM,WCafC,EAxBK,WAClB,IAAMnD,EAAWW,YAAYL,GACvBM,EAAWC,cAOjB,OAJAuC,qBAAU,WACRxC,EAASf,EAAoBjB,mBAC5B,CAACgC,IAGF,oBAAI3C,UAAWC,IAAOmF,YAAtB,SACGrD,EAASsD,KAAI,gBAAG3D,EAAH,EAAGA,GAAIL,EAAP,EAAOA,KAAMC,EAAb,EAAaA,OAAb,OACZ,cAAC,EAAD,CAEEI,GAAIA,EACJL,KAAMA,EACNC,OAAQA,EACRoD,gBAAiB,kBAdD,SAAAhD,GAAE,OAAIiB,EAASf,EAAoBH,cAAcC,IAc1CgD,CAAgBhD,KAJlCA,SCXA,SAAS4D,IACtB,IAAMvD,EAAWW,YAAYb,GACvBO,EAAUM,YAAYP,GAC5B,OACE,sBAAKnC,UAAU,MAAf,UACE,oBAAIA,UAAU,QAAd,uBACA,cAAC,EAAD,IAEA,oBAAIA,UAAU,QAAd,sBAECoC,GAAW,cAAC,EAAD,IACS,IAApBL,EAASwD,OACR,cAAC,EAAD,IAEA,6DAGF,cAAC,EAAD,IACA,cAAC,IAAD,CAAgBC,UAAU,OAAOC,SAAS,YAAYC,MAAM,e,yDCT1D/E,GAA6CiB,EAA7CjB,cAAeS,GAA8BQ,EAA9BR,WAAYK,GAAkBG,EAAlBH,cAE7BO,GAAQ2D,YAAc,IAAD,mBACxBhF,GAAciF,WAAY,SAAC/E,EAAD,YAAMgF,WADR,cAExBzE,GAAWwE,WAAY,SAAC9D,EAAD,OAAU+D,EAAV,EAAUA,QAAV,4BAA4B/D,GAA5B,CAAmC+D,OAFlC,cAGxBpE,GAAcmE,WAAY,SAAC9D,EAAD,OAAU+D,EAAV,EAAUA,QAAV,OACzB/D,EAAMI,QAAO,SAAAX,GAAO,OAAIA,EAAQG,KAAOmE,QAJhB,IAOrBzD,GAAUuD,aAAc,GAAD,mBAC1BvE,GAAW0E,SAAU,kBAAM,KADD,cAE1B1E,GAAWwE,WAAY,kBAAM,KAFH,cAG1BxE,GAAW2E,UAAW,kBAAM,KAHF,cAI1BtE,GAAcqE,SAAU,kBAAM,KAJJ,cAK1BrE,GAAcmE,WAAY,kBAAM,KALN,cAM1BnE,GAAcsE,UAAW,kBAAM,KANL,cAO1BpF,GAAcmF,SAAU,kBAAM,KAPJ,cAQ1BnF,GAAciF,WAAY,kBAAM,KARN,cAS1BjF,GAAcoF,UAAW,kBAAM,KATL,IAYvB7D,GAASyD,YAAc,GAAD,eACzBxB,GAAe,SAACtD,EAAD,YAAMgF,YAGlBG,GAAQL,YAAc,MAAD,mBACxBhF,GAAcoF,UAAW,SAAClF,EAAD,YAAMgF,WADP,cAExBlF,GAAcmF,SAAU,kBAAM,QAFN,IAKZG,eAAgB,CAC7BjE,SACAE,UACAE,WACA4D,WCxCIE,GAAU,sBACXC,YAAqB,CACtBC,kBAAmB,CACjBC,eAAgB,CAACC,IAAOC,IAAWC,IAAOC,IAASC,IAAOC,SAHhD,CAMdC,MAGWC,GAAQC,YAAe,CAClCC,QAAS,CACPhF,SAAUiF,IAEZd,WAAYA,GACZe,UAAUC,IClBZC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUR,MAAOA,GAAjB,SAEE,cAAC,EAAD,QAIJS,SAASC,eAAe,W","file":"static/js/main.d6d76a70.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactsItem\":\"ContactsItem_contactsItem__9Ep2l\",\"contactWrapper\":\"ContactsItem_contactWrapper__2LUGa\",\"contactName\":\"ContactsItem_contactName__gIm3h\",\"contactNumber\":\"ContactsItem_contactNumber__1FEnq\",\"deleteBtn\":\"ContactsItem_deleteBtn__1hmix\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterWrapper\":\"Filter_filterWrapper__2XR-i\",\"filterLabel\":\"Filter_filterLabel__3f0dB\",\"filterInput\":\"Filter_filterInput__3y6e9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"spinner\":\"Loader_spinner__1jTQ9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__23pZ7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AddContactForm_form__3-qHk\",\"label\":\"AddContactForm_label__2hpE2\",\"input\":\"AddContactForm_input__3PPK7\",\"button\":\"AddContactForm_button__20x-p\"};","import LoaderSpinner from 'react-loader-spinner';\r\nimport styles from './Loader.module.css';\r\n\r\nexport const Loader = () => {\r\n  return (\r\n    <div className={styles.spinner}>\r\n      <LoaderSpinner\r\n        type=\"Audio\"\r\n        // color=\"#ffa600ea\"\r\n        color=\"#00BFFF\"\r\n        height={60}\r\n        width={60}\r\n        timeout={5000}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n","import axios from 'axios';\r\nimport { createAsyncThunk } from '@reduxjs/toolkit';\r\n// import phonebookActions from './phonebook-actions';\r\n\r\naxios.defaults.baseURL = 'https://61f4180410f0f7001768c7fb.mockapi.io/';\r\n\r\n// const fetchContacts = () => dispatch => {\r\n//   dispatch(phonebookActions.fetchContactsRequest());\r\n//   axios\r\n//     .get('/contacts/')\r\n//     .then(({ data }) => dispatch(phonebookActions.fetchContactsSuccess(data)))\r\n//     .catch(error => dispatch(phonebookActions.fetchContactsError(error)));\r\n// };\r\n\r\nconst fetchContacts = createAsyncThunk(\r\n  'contacts/fetchContacts',\r\n  async (_, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.get('/contacts/');\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\n// const addContact = newContact => dispatch => {\r\n//   const contact = {\r\n//     name: newContact.name,\r\n//     number: newContact.number,\r\n//   };\r\n//   dispatch(phonebookActions.addContactRequest());\r\n//   axios\r\n//     .post('/contacts', contact)\r\n//     .then(({ data }) => dispatch(phonebookActions.addContactSuccess(data)))\r\n//     .catch(error => dispatch(phonebookActions.addContactError(error)));\r\n// };\r\nconst addContact = createAsyncThunk(\r\n  'contacts/addContact',\r\n  async ({ name, number }, { rejectWithValue }) => {\r\n    try {\r\n      const contact = { name, number };\r\n      const response = await axios.post('/contacts', contact);\r\n      return response.data;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\n// const deleteContact = contactId => dispatch => {\r\n//   dispatch(phonebookActions.deleteContactRequest());\r\n\r\n//   axios\r\n//     .delete(`/contacts/${contactId}`)\r\n//     .then(() => dispatch(phonebookActions.deleteContactSuccess(contactId)))\r\n//     .catch(error => dispatch(phonebookActions.deleteContactError(error)));\r\n// };\r\n\r\nconst deleteContact = createAsyncThunk(\r\n  'contacts/deleteContact',\r\n  async (id, { rejectWithValue }) => {\r\n    try {\r\n      const response = await axios.delete(`/contacts/${id}`);\r\n      return response.data.id;\r\n    } catch (error) {\r\n      return rejectWithValue(error.message);\r\n    }\r\n  },\r\n);\r\n\r\nconst phonebookOperations = {\r\n  fetchContacts,\r\n  addContact,\r\n  deleteContact,\r\n};\r\n\r\nexport default phonebookOperations;\r\n","export const getContacts = state => state.contacts.items;\r\nexport const getFilter = state => state.contacts.filter;\r\nexport const getLoading = state => state.contacts.loading;\r\n\r\nexport const filterContacts = state => {\r\n  const contacts = getContacts(state);\r\n  const filter = getFilter(state);\r\n  const normalizedFilter = filter.toLowerCase();\r\n  return contacts.filter(contact =>\r\n    contact.name.toLowerCase().includes(normalizedFilter),\r\n  );\r\n};\r\n","import { useState } from 'react';\r\nimport styles from './AddContactForm.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport phonebookOperations from '../../redux/phonebook-operations';\r\nimport { getContacts } from '../../redux/phonebook-selectors';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nfunction AddContactForm() {\r\n  const contacts = useSelector(getContacts);\r\n  const dispatch = useDispatch();\r\n\r\n  const [name, setName] = useState('');\r\n  const [number, setNumber] = useState('');\r\n\r\n  const handleChange = e => {\r\n    switch (e.currentTarget.name) {\r\n      case 'name':\r\n        setName(e.currentTarget.value);\r\n        break;\r\n      case 'number':\r\n        setNumber(e.currentTarget.value);\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  };\r\n\r\n  const handleSubmit = e => {\r\n    e.preventDefault();\r\n    if (\r\n      contacts.find(\r\n        contact => contact.name.toLowerCase() === name.toLowerCase(),\r\n      )\r\n    ) {\r\n      toast.warning(`Name '${name}' is already in contacts`);\r\n      reset();\r\n      return;\r\n    }\r\n\r\n    if (contacts.find(contact => contact.number.toLowerCase() === number)) {\r\n      toast.warning(`Number '${number}' is already in contacts`);\r\n      reset();\r\n      return;\r\n    }\r\n\r\n    dispatch(phonebookOperations.addContact({ name, number }));\r\n    reset();\r\n  };\r\n\r\n  const reset = () => {\r\n    setName('');\r\n    setNumber('');\r\n  };\r\n\r\n  return (\r\n    <form onSubmit={handleSubmit} className={styles.form} autoComplete=\"off\">\r\n      <label className={styles.label}>\r\n        Name\r\n        <input\r\n          className={styles.input}\r\n          type=\"text\"\r\n          name=\"name\"\r\n          value={name}\r\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <label className={styles.label}>\r\n        Number\r\n        <input\r\n          className={styles.input}\r\n          type=\"tel\"\r\n          name=\"number\"\r\n          value={number}\r\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\r\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\r\n          required\r\n          onChange={handleChange}\r\n        />\r\n      </label>\r\n      <button type=\"submit\" className={styles.button}>\r\n        Add contact\r\n      </button>\r\n    </form>\r\n  );\r\n}\r\n\r\nexport default AddContactForm;\r\n","import { createAction } from '@reduxjs/toolkit';\r\n\r\n// const fetchContactsRequest = createAction('contacts/fetchContactRequest');\r\n// const fetchContactsSuccess = createAction('contacts/fetchContactSuccess');\r\n// const fetchContactsError = createAction('contacts/fetchContactError');\r\n\r\n// const addContactRequest = createAction('contacts/addContactRequest');\r\n// const addContactSuccess = createAction('contacts/addContactSuccess');\r\n// const addContactError = createAction('contacts/addContactError');\r\n\r\n// const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\n// const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\n// const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n\r\n// const phonebookActions = {\r\n//   fetchContactsRequest,\r\n//   fetchContactsSuccess,\r\n//   fetchContactsError,\r\n//   addContactRequest,\r\n//   addContactSuccess,\r\n//   addContactError,\r\n//   deleteContactRequest,\r\n//   deleteContactSuccess,\r\n//   deleteContactError,\r\n//   changeFilter,\r\n// };\r\n\r\n// export default phonebookActions;\r\n","import React from 'react';\r\nimport styles from './Filter.module.css';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { getFilter } from '../../redux/phonebook-selectors';\r\nimport { changeFilter } from '../../redux/phonebook-actions';\r\n\r\nconst Filter = () => {\r\n  const value = useSelector(getFilter);\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className={styles.filterWrapper}>\r\n      <label className={styles.filterLabel}>\r\n        Find contacts by name\r\n        <input\r\n          type=\"text\"\r\n          value={value}\r\n          onChange={e => dispatch(changeFilter(e.currentTarget.value))}\r\n          className={styles.filterInput}\r\n        ></input>\r\n      </label>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Filter;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './ContactsItem.module.css';\r\nimport { IoTrashOutline } from 'react-icons/io5';\r\n\r\nconst ContactsItem = ({ id, name, number, onDeleteContact }) => {\r\n  return (\r\n    <li className={styles.contactsItem}>\r\n      <div className={styles.contactWrapper}>\r\n        <p className={styles.contactName}>{name}:</p>\r\n        <p className={styles.contactNumber}>{number}</p>\r\n      </div>\r\n\r\n      <button\r\n        type=\"button\"\r\n        onClick={() => onDeleteContact(id)}\r\n        className={styles.deleteBtn}\r\n      >\r\n        <IoTrashOutline size={22} />\r\n      </button>\r\n    </li>\r\n  );\r\n};\r\nContactsItem.propTypes = {\r\n  id: PropTypes.string,\r\n  name: PropTypes.string,\r\n  number: PropTypes.string,\r\n  onDeleteContact: PropTypes.func,\r\n};\r\n\r\nexport default ContactsItem;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport styles from './ContactList.module.css';\r\nimport ContactsItem from '../ContactsItem/ContactsItem';\r\nimport phonebookOperations from '../../redux/phonebook-operations';\r\nimport { filterContacts } from '../../redux/phonebook-selectors';\r\n\r\nconst ContactList = () => {\r\n  const contacts = useSelector(filterContacts);\r\n  const dispatch = useDispatch();\r\n  const onDeleteContact = id => dispatch(phonebookOperations.deleteContact(id));\r\n\r\n  useEffect(() => {\r\n    dispatch(phonebookOperations.fetchContacts());\r\n  }, [dispatch]);\r\n\r\n  return (\r\n    <ul className={styles.contactList}>\r\n      {contacts.map(({ id, name, number }) => (\r\n        <ContactsItem\r\n          key={id}\r\n          id={id}\r\n          name={name}\r\n          number={number}\r\n          onDeleteContact={() => onDeleteContact(id)}\r\n        ></ContactsItem>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default ContactList;\r\n","import './App.css';\nimport { Loader } from './Components/Loader/Loader';\nimport { ToastContainer } from 'react-toastify';\nimport AddContactForm from './Components/AddContactForm';\nimport Filter from './Components/Filter/Filter';\nimport ContactList from './Components/ContactsList/ContactList';\nimport { useSelector } from 'react-redux';\nimport { getContacts, getLoading } from './redux/phonebook-selectors';\n\nexport default function App() {\n  const contacts = useSelector(getContacts);\n  const loading = useSelector(getLoading);\n  return (\n    <div className=\"App\">\n      <h1 className=\"Title\">Phonebook</h1>\n      <AddContactForm />\n\n      <h2 className=\"Title\">Contacts</h2>\n\n      {loading && <Loader />}\n      {contacts.length !== 0 ? (\n        <Filter />\n      ) : (\n        <h3>Your contacts list is empty</h3>\n      )}\n\n      <ContactList />\n      <ToastContainer autoClose=\"3000\" position=\"top-right\" theme=\"colored\" />\n    </div>\n  );\n}\n","import { createReducer } from '@reduxjs/toolkit';\r\nimport { combineReducers } from 'redux';\r\nimport { changeFilter } from './phonebook-actions';\r\nimport phonebookOperations from './phonebook-operations';\r\n\r\n// const {\r\n//   fetchContactsRequest,\r\n//   fetchContactsSuccess,\r\n//   fetchContactsError,\r\n//   addContactRequest,\r\n//   addContactSuccess,\r\n//   addContactError,\r\n//   deleteContactRequest,\r\n//   deleteContactSuccess,\r\n//   deleteContactError,\r\n//   changeFilter,\r\n// } = phonebookActions;\r\n// const { changeFilter } = phonebookActions;\r\nconst { fetchContacts, addContact, deleteContact } = phonebookOperations;\r\n\r\nconst items = createReducer([], {\r\n  [fetchContacts.fulfilled]: (_, { payload }) => payload,\r\n  [addContact.fulfilled]: (state, { payload }) => [...state, payload],\r\n  [deleteContact.fulfilled]: (state, { payload }) =>\r\n    state.filter(contact => contact.id !== payload),\r\n});\r\n\r\nconst loading = createReducer(false, {\r\n  [addContact.pending]: () => true,\r\n  [addContact.fulfilled]: () => false,\r\n  [addContact.rejected]: () => false,\r\n  [deleteContact.pending]: () => true,\r\n  [deleteContact.fulfilled]: () => false,\r\n  [deleteContact.rejected]: () => false,\r\n  [fetchContacts.pending]: () => true,\r\n  [fetchContacts.fulfilled]: () => false,\r\n  [fetchContacts.rejected]: () => false,\r\n});\r\n\r\nconst filter = createReducer('', {\r\n  [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(null, {\r\n  [fetchContacts.rejected]: (_, { payload }) => payload,\r\n  [fetchContacts.pending]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n  items,\r\n  filter,\r\n  loading,\r\n  error,\r\n});\r\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n  FLUSH,\r\n  REHYDRATE,\r\n  PAUSE,\r\n  PERSIST,\r\n  PURGE,\r\n  REGISTER,\r\n} from 'redux-persist';\r\nimport phonebookReducer from './phonebook-reducer';\r\n\r\nconst middleware = [\r\n  ...getDefaultMiddleware({\r\n    serializableCheck: {\r\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n    },\r\n  }),\r\n  logger,\r\n];\r\n\r\nexport const store = configureStore({\r\n  reducer: {\r\n    contacts: phonebookReducer,\r\n  },\r\n  middleware: middleware,\r\n  devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\n// export const persistor = persistStore(store);\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { store } from './redux/store';\nimport { Provider } from 'react-redux';\n// import { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      {/* <PersistGate loading={null} persistor={persistor}> */}\n      <App />\n      {/* </PersistGate> */}\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}